{"id":"Vofh","dependencies":[{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\package.json","includedInParent":true,"mtime":1662825939615},{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\package.json","includedInParent":true,"mtime":1662667073961},{"name":"ssr-window","loc":{"line":2,"column":28,"index":66},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\ssr-window\\ssr-window.esm.js"},{"name":"../shared/dom.js","loc":{"line":3,"column":14,"index":94},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\dom.js"},{"name":"../shared/utils.js","loc":{"line":4,"column":41,"index":155},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\utils.js"},{"name":"../shared/get-support.js","loc":{"line":5,"column":27,"index":204},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\get-support.js"},{"name":"../shared/get-device.js","loc":{"line":6,"column":26,"index":258},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\get-device.js"},{"name":"../shared/get-browser.js","loc":{"line":7,"column":27,"index":312},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\get-browser.js"},{"name":"./modules/resize/resize.js","loc":{"line":8,"column":19,"index":359},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\modules\\resize\\resize.js"},{"name":"./modules/observer/observer.js","loc":{"line":9,"column":21,"index":410},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\modules\\observer\\observer.js"},{"name":"./events-emitter.js","loc":{"line":10,"column":26,"index":470},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events-emitter.js"},{"name":"./update/index.js","loc":{"line":11,"column":19,"index":512},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\update\\index.js"},{"name":"./translate/index.js","loc":{"line":12,"column":22,"index":555},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\translate\\index.js"},{"name":"./transition/index.js","loc":{"line":13,"column":23,"index":602},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\transition\\index.js"},{"name":"./slide/index.js","loc":{"line":14,"column":18,"index":645},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\slide\\index.js"},{"name":"./loop/index.js","loc":{"line":15,"column":17,"index":682},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\loop\\index.js"},{"name":"./grab-cursor/index.js","loc":{"line":16,"column":23,"index":724},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\grab-cursor\\index.js"},{"name":"./events/index.js","loc":{"line":17,"column":19,"index":769},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js"},{"name":"./breakpoints/index.js","loc":{"line":18,"column":24,"index":814},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\breakpoints\\index.js"},{"name":"./classes/index.js","loc":{"line":19,"column":20,"index":860},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\classes\\index.js"},{"name":"./images/index.js","loc":{"line":20,"column":19,"index":901},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\images\\index.js"},{"name":"./check-overflow/index.js","loc":{"line":21,"column":26,"index":948},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\check-overflow\\index.js"},{"name":"./defaults.js","loc":{"line":22,"column":21,"index":998},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\defaults.js"},{"name":"./moduleExtendParams.js","loc":{"line":23,"column":31,"index":1046},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\core.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\moduleExtendParams.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nvar _dom = _interopRequireDefault(require(\"../shared/dom.js\"));\n\nvar _utils = require(\"../shared/utils.js\");\n\nvar _getSupport = require(\"../shared/get-support.js\");\n\nvar _getDevice = require(\"../shared/get-device.js\");\n\nvar _getBrowser = require(\"../shared/get-browser.js\");\n\nvar _resize = _interopRequireDefault(require(\"./modules/resize/resize.js\"));\n\nvar _observer = _interopRequireDefault(require(\"./modules/observer/observer.js\"));\n\nvar _eventsEmitter = _interopRequireDefault(require(\"./events-emitter.js\"));\n\nvar _index = _interopRequireDefault(require(\"./update/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"./translate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"./transition/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"./slide/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"./loop/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"./grab-cursor/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"./events/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"./breakpoints/index.js\"));\n\nvar _index9 = _interopRequireDefault(require(\"./classes/index.js\"));\n\nvar _index10 = _interopRequireDefault(require(\"./images/index.js\"));\n\nvar _index11 = _interopRequireDefault(require(\"./check-overflow/index.js\"));\n\nvar _defaults = _interopRequireDefault(require(\"./defaults.js\"));\n\nvar _moduleExtendParams = _interopRequireDefault(require(\"./moduleExtendParams.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter: _eventsEmitter.default,\n  update: _index.default,\n  translate: _index2.default,\n  transition: _index3.default,\n  slide: _index4.default,\n  loop: _index5.default,\n  grabCursor: _index6.default,\n  events: _index7.default,\n  breakpoints: _index8.default,\n  checkOverflow: _index11.default,\n  classes: _index9.default,\n  images: _index10.default\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = (0, _utils.extend)({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && (0, _dom.default)(params.el).length > 1) {\n      const swipers = [];\n      (0, _dom.default)(params.el).each(containerEl => {\n        const newParams = (0, _utils.extend)({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = (0, _getSupport.getSupport)();\n    swiper.device = (0, _getDevice.getDevice)({\n      userAgent: params.userAgent\n    });\n    swiper.browser = (0, _getBrowser.getBrowser)();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        swiper: swiper,\n        extendParams: (0, _moduleExtendParams.default)(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = (0, _utils.extend)({}, _defaults.default, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = (0, _utils.extend)({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = (0, _utils.extend)({}, swiper.params);\n    swiper.passedParams = (0, _utils.extend)({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Save Dom lib\n\n\n    swiper.$ = _dom.default; // Extend Swiper\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el: el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: (0, _dom.default)(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal: function () {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical: function () {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: (0, _utils.now)(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n\n\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl: slideEl,\n        classNames: classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n\n    if (exact === void 0) {\n      exact = false;\n    }\n\n    const swiper = this;\n    const {\n      params: params,\n      slides: slides,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n      size: swiperSize,\n      activeIndex: activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid: snapGrid,\n      params: params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(\"\".concat(swiper.params.containerModifierClass).concat(currentDirection)).addClass(\"\".concat(swiper.params.containerModifierClass).concat(newDirection));\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.each(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.$el.addClass(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.$el.removeClass(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    const $el = (0, _dom.default)(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return \".\".concat((swiper.params.wrapperClass || '').trim().split(' ').join('.'));\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = (0, _dom.default)(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n        res.children = options => $el.children(options);\n\n        return res;\n      }\n\n      if (!$el.children) {\n        return (0, _dom.default)($el).children(getWrapperSelector());\n      }\n\n      return $el.children(getWrapperSelector());\n    }; // Find Wrapper\n\n\n    let $wrapperEl = getWrapper();\n\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = (0, _ssrWindow.getDocument)();\n      const wrapper = document.createElement('div');\n      $wrapperEl = (0, _dom.default)(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(\".\".concat(swiper.params.slideClass)).each(slideEl => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el: $el,\n      el: el,\n      $wrapperEl: $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n\n    const swiper = this;\n    const {\n      params: params,\n      $el: $el,\n      $wrapperEl: $wrapperEl,\n      slides: slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      (0, _utils.deleteProps)(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    (0, _utils.extend)(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return _defaults.default;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([_resize.default, _observer.default]);\nvar _default = Swiper;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"715a51157e01c804d636067f5cf9900a","cacheData":{"env":{}}}