{"id":"k6DY","dependencies":[{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\package.json","includedInParent":true,"mtime":1662825939615},{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\package.json","includedInParent":true,"mtime":1662667073961},{"name":"../../shared/create-shadow.js","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\modules\\effect-coverflow\\effect-coverflow.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\create-shadow.js"},{"name":"../../shared/effect-init.js","loc":{"line":2,"column":23,"index":81},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\modules\\effect-coverflow\\effect-coverflow.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\effect-init.js"},{"name":"../../shared/effect-target.js","loc":{"line":3,"column":25,"index":137},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\modules\\effect-coverflow\\effect-coverflow.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\shared\\effect-target.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = EffectCoverflow;\n\nvar _createShadow = _interopRequireDefault(require(\"../../shared/create-shadow.js\"));\n\nvar _effectInit = _interopRequireDefault(require(\"../../shared/effect-init.js\"));\n\nvar _effectTarget = _interopRequireDefault(require(\"../../shared/effect-target.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction EffectCoverflow(_ref) {\n  let {\n    swiper: swiper,\n    extendParams: extendParams,\n    on: on\n  } = _ref;\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides: slides,\n      slidesSizesGrid: slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = \"translate3d(\".concat(translateX, \"px,\").concat(translateY, \"px,\").concat(translateZ, \"px)  rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg) scale(\").concat(scale, \")\");\n      const $targetEl = (0, _effectTarget.default)(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = (0, _createShadow.default)(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = (0, _createShadow.default)(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl: transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n\n  (0, _effectInit.default)({\n    effect: 'coverflow',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}"},"sourceMaps":null,"error":null,"hash":"b55e8e39fcdc443dfdc480d454de0aa1","cacheData":{"env":{}}}