{"id":"Fq9C","dependencies":[{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\package.json","includedInParent":true,"mtime":1662825939615},{"name":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\package.json","includedInParent":true,"mtime":1662667073961},{"name":"ssr-window","loc":{"line":1,"column":28,"index":28},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\ssr-window\\ssr-window.esm.js"},{"name":"./onTouchStart.js","loc":{"line":2,"column":25,"index":67},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onTouchStart.js"},{"name":"./onTouchMove.js","loc":{"line":3,"column":24,"index":112},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onTouchMove.js"},{"name":"./onTouchEnd.js","loc":{"line":4,"column":23,"index":155},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onTouchEnd.js"},{"name":"./onResize.js","loc":{"line":5,"column":21,"index":195},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onResize.js"},{"name":"./onClick.js","loc":{"line":6,"column":20,"index":232},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onClick.js"},{"name":"./onScroll.js","loc":{"line":7,"column":21,"index":269},"parent":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\index.js","resolved":"C:\\Users\\Даня\\Desktop\\portfolio\\node_modules\\swiper\\core\\events\\onScroll.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nvar _onTouchStart = _interopRequireDefault(require(\"./onTouchStart.js\"));\n\nvar _onTouchMove = _interopRequireDefault(require(\"./onTouchMove.js\"));\n\nvar _onTouchEnd = _interopRequireDefault(require(\"./onTouchEnd.js\"));\n\nvar _onResize = _interopRequireDefault(require(\"./onResize.js\"));\n\nvar _onClick = _interopRequireDefault(require(\"./onClick.js\"));\n\nvar _onScroll = _interopRequireDefault(require(\"./onScroll.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet dummyEventAttached = false;\n\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = (0, _ssrWindow.getDocument)();\n  const {\n    params: params,\n    touchEvents: touchEvents,\n    el: el,\n    wrapperEl: wrapperEl,\n    device: device,\n    support: support\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method; // Touch Events\n\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n      passive: false,\n      capture: capture\n    } : capture);\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  } // Prevent Links Clicks\n\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', _onResize.default, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', _onResize.default, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = (0, _ssrWindow.getDocument)();\n  const {\n    params: params,\n    support: support\n  } = swiper;\n  swiper.onTouchStart = _onTouchStart.default.bind(swiper);\n  swiper.onTouchMove = _onTouchMove.default.bind(swiper);\n  swiper.onTouchEnd = _onTouchEnd.default.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = _onScroll.default.bind(swiper);\n  }\n\n  swiper.onClick = _onClick.default.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nvar _default = {\n  attachEvents: attachEvents,\n  detachEvents: detachEvents\n};\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"8109953483e44de16abc26703f6d6f91","cacheData":{"env":{}}}